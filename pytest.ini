[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage settings
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-branch
    --no-cov-on-fail
    --verbose
    -ra

# Coverage configuration
[coverage:run]
branch = True
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    def main
    if TYPE_CHECKING:

# Show missing lines in coverage report
show_missing = True

# Minimum coverage percentage required
fail_under = 80

[coverage:html]
directory = coverage_html

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    gui: marks tests that require GUI
    db: marks tests that require database

# Environment variables for tests
env =
    PYTHONPATH=src
    TESTING=true
    DB_URL=sqlite:///test.db

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
